// ==UserScript==
// @name         WPlace Pixel Overlay Lock
// @version      1.0
// @description  Locks overlay to pixel grid and cancels zoom scaling
// @match        https://wplace.io/*
// @grant        none
// ==/UserScript==

(function () {
  'use strict';

  // Create overlay container
  const overlay = document.createElement('img');
  overlay.src = 'https://your-image-url-here.png'; // Replace with your overlay image
  overlay.style.position = 'absolute';
  overlay.style.imageRendering = 'pixelated';
  overlay.style.pointerEvents = 'none';
  overlay.style.zIndex = '1000';
  overlay.style.transformOrigin = 'top left';
  document.body.appendChild(overlay);

  // Utility to parse matrix from canvas transform
  function getCanvasTransform() {
    const canvas = document.querySelector('canvas');
    const style = window.getComputedStyle(canvas);
    const matrix = style.transform.match(/matrix`\(([^)]+)\)`/);
    if (!matrix) return { scale: 1, x: 0, y: 0 };

    const values = matrix[1].split(',').map(parseFloat);
    const scale = values[0]; // assuming uniform scale
    const x = values[4];
    const y = values[5];
    return { scale, x, y };
  }

  // Sync overlay to canvas transform
  function updateOverlay() {
    const { scale, x, y } = getCanvasTransform();

    // Invert scale to cancel zoom
    const inverseScale = 1 / scale;

    overlay.style.transform = `
      translate(${x}px, ${y}px)
      scale(${inverseScale})
    `;

    // Optional: adjust size to match canvas
    const canvas = document.querySelector('canvas');
    overlay.width = canvas.width;
    overlay.height = canvas.height;
  }

  // Run every frame for smooth sync
  function loop() {
    updateOverlay();
    requestAnimationFrame(loop);
  }

  loop();
})();
