(function () {
  const imgUrl = prompt("Enter image URL:");
  const startX = parseInt(prompt("Start X coordinate:", "0"));
  const startY = parseInt(prompt("Start Y coordinate:", "0"));

  const wplaceColors = [
    "#000000", "#3c3c3c", "#787878", "#d2d2d2", "#ffffff",
    "#600018", "#ed1c24", "#ff7f27", "#f6aa09", "#f9dd3b", "#fffabc",
    "#0eb968", "#13e67b", "#87ff5e", "#0c816e", "#10aea6", "#13e1be",
    "#28509e", "#4093e4", "#60f7f2", "#6b50f6", "#99b1fb", "#780c99",
    "#aa38b9", "#e09ff9", "#cb007a", "#ec1f80", "#f38da9", "#684634",
    "#95682a", "#f8b277"
  ];

  const hexToRgb = hex => [
    parseInt(hex.slice(1, 3), 16),
    parseInt(hex.slice(3, 5), 16),
    parseInt(hex.slice(5, 7), 16)
  ];

  const paletteRGB = wplaceColors.map(hexToRgb);

  const findClosestColor = (r, g, b) => {
    let minDist = Infinity, best = "#000000";
    for (let i = 0; i < paletteRGB.length; i++) {
      const [pr, pg, pb] = paletteRGB[i];
      const dist = (r - pr) ** 2 + (g - pg) ** 2 + (b - pb) ** 2;
      if (dist < minDist) {
        minDist = dist;
        best = wplaceColors[i];
      }
    }
    return best;
  };

  const img = new Image();
  img.crossOrigin = "Anonymous";
  img.onload = () => {
    const wplaceCanvas = document.querySelector('canvas');
    if (!wplaceCanvas) {
      alert("❌ WPlace canvas not found.");
      return;
    }

    // Create overlay canvas
    const overlay = document.createElement('canvas');
    overlay.width = wplaceCanvas.width;
    overlay.height = wplaceCanvas.height;
    overlay.style = `
      position:absolute;
      left:${wplaceCanvas.offsetLeft}px;
      top:${wplaceCanvas.offsetTop}px;
      pointer-events:none;
      z-index:9999;
    `;
    document.body.appendChild(overlay);

    const ctx = overlay.getContext('2d');
    const tempCanvas = document.createElement('canvas');
    const tempCtx = tempCanvas.getContext('2d');
    tempCanvas.width = img.width;
    tempCanvas.height = img.height;
    tempCtx.drawImage(img, 0, 0);

    const data = tempCtx.getImageData(0, 0, img.width, img.height).data;

    for (let y = 0; y < img.height; y++) {
      for (let x = 0; x < img.width; x++) {
        const i = (y * img.width + x) * 4;
        const r = data[i], g = data[i + 1], b = data[i + 2], a = data[i + 3];
        if (a > 0) {
          const hex = findClosestColor(r, g, b);
          ctx.fillStyle = hex + "99"; // semi-transparent
          ctx.fillRect(startX + x, startY + y, 1, 1);
        }
      }
    }

    // Add coordinate hover display
    const coordDisplay = document.createElement('div');
    coordDisplay.style = `
      position: fixed;
      background: #222;
      color: #fff;
      padding: 2px 6px;
      font: 12px monospace;
      border-radius: 4px;
      pointer-events: none;
      z-index: 10000;
      display: none;
    `;
    document.body.appendChild(coordDisplay);

    wplaceCanvas.addEventListener('mousemove', e => {
      const rect = wplaceCanvas.getBoundingClientRect();
      const x = Math.floor(e.clientX - rect.left);
      const y = Math.floor(e.clientY - rect.top);
      coordDisplay.textContent = `(${x}, ${y})`;
      coordDisplay.style.left = `${e.clientX + 10}px`;
      coordDisplay.style.top = `${e.clientY + 10}px`;
      coordDisplay.style.display = 'block';
    });

    wplaceCanvas.addEventListener('mouseleave', () => {
      coordDisplay.style.display = 'none';
    });

    console.log("✅ Overlay + hover coordinates ready.");
  };

  img.onerror = () => alert("❌ Failed to load image.");
  img.src = imgUrl;
})();
