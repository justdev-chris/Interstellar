(function () {
  const overlayImageURL = prompt("Enter your overlay image URL:");
  if (!overlayImageURL) return;

  const canvas = document.querySelector('canvas');
  if (!canvas) return alert("❌ WPlace canvas not found.");

  // Create overlay container
  const overlay = document.createElement('div');
  overlay.id = 'wplace-overlay';
  Object.assign(overlay.style, {
    position: 'absolute',
    top: '0px',
    left: '0px',
    width: '300px',
    height: '300px',
    backgroundImage: `url(${overlayImageURL})`,
    backgroundSize: 'contain',
    backgroundRepeat: 'no-repeat',
    imageRendering: 'pixelated',
    opacity: '0.5',
    zIndex: '9999',
    border: '1px dashed #aaa',
    resize: 'both',
    overflow: 'hidden',
    cursor: 'move',
    pointerEvents: 'auto',
  });

  canvas.parentElement.appendChild(overlay);

  // Drag logic
  let isDragging = false;
  let offsetX = 0, offsetY = 0;

  overlay.addEventListener('mousedown', (e) => {
    if (e.target !== overlay) return;
    isDragging = true;
    offsetX = e.clientX - overlay.offsetLeft;
    offsetY = e.clientY - overlay.offsetTop;
    e.preventDefault();
  });

  document.addEventListener('mousemove', (e) => {
    if (!isDragging) return;
    overlay.style.left = `${e.clientX - offsetX}px`;
    overlay.style.top = `${e.clientY - offsetY}px`;
  });

  document.addEventListener('mouseup', () => {
    isDragging = false;
  });

  // Sync transform with canvas
  const syncTransform = () => {
    const canvasStyle = getComputedStyle(canvas);
    const transform = canvasStyle.transform;
    overlay.style.transform = transform;
  };

  // Observe canvas transform changes
  const observer = new MutationObserver(syncTransform);
  observer.observe(canvas, { attributes: true, attributeFilter: ['style'] });

  // Initial sync
  syncTransform();

  // Optional: opacity slider
  const slider = document.createElement('input');
  slider.type = 'range';
  slider.min = '0.1';
  slider.max = '1';
  slider.step = '0.01';
  slider.value = '0.5';
  slider.style = `
    position:fixed;
    top:10px;
    left:10px;
    z-index:10001;
  `;
  document.body.appendChild(slider);

  slider.addEventListener('input', () => {
    overlay.style.opacity = slider.value;
  });

  console.log("✅ Overlay is now pixelated, draggable, resizable, and synced to WPlace map.");
})();
